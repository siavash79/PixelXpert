//file:noinspection SpellCheckingInspection
plugins {
	id 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
	compileSdk 34

	defaultConfig {
		applicationId "sh.siava.pixelxpert"
		minSdk 33
		targetSdk 34
		versionCode 393
		versionName "4.0.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	final def keystorePropertiesFile = rootProject.file("ReleaseKey.properties")

	def releaseSignature = signingConfigs.debug
	try (def keystorePropertiesStream = new FileInputStream(keystorePropertiesFile)) {
		final def keystoreProperties = new Properties()
		keystoreProperties.load(keystorePropertiesStream)
		releaseSignature = signingConfigs.create("releaseSignature")
				{
					keyAlias keystoreProperties['keyAlias']
					keyPassword keystoreProperties['keyPassword']
					storeFile rootProject.file(keystoreProperties['storeFile'])
					storePassword keystoreProperties['storePassword']
				}
	}
	catch (ignored) {
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			crunchPngs true
			proguardFiles("proguard-android-optimize.txt", "proguard.pro", "proguard-rules.pro")
			signingConfig releaseSignature
		}
		debug {
			minifyEnabled false
			proguardFiles("proguard-android-optimize.txt", "proguard.pro", "proguard-rules.pro")
			signingConfig releaseSignature
		}
	}

	applicationVariants.configureEach { variant ->
		variant.outputs.configureEach { output ->
			outputFileName = new File("PixelXpert.apk")
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_9
		targetCompatibility JavaVersion.VERSION_1_9
	}
	lint {
		checkReleaseBuilds false
		abortOnError false
	}
	namespace 'sh.siava.pixelxpert'
	buildFeatures {
		viewBinding true
		aidl true
	}
	kotlinOptions {
		jvmTarget = '9'
	}
}

dependencies {
	// Xposed api
	compileOnly files('lib/api-82.jar')
	compileOnly files('lib/api-82-sources.jar')

	implementation project(path: ':RangeSliderPreference')

	implementation libs.androidx.constraintlayout
	implementation libs.navigation.fragment.ktx
	implementation libs.navigation.ui.ktx
	implementation libs.navigation.fragment.ktx
	implementation libs.navigation.ui.ktx
	implementation libs.androidx.appcompat
	implementation libs.androidx.annotation
	implementation libs.androidx.preference.ktx
	implementation libs.androidx.recyclerview
	implementation libs.android.material
	implementation libs.androidx.ui.geometry
	//noinspection KtxExtensionAvailable
	implementation libs.androidx.activity
	implementation libs.androidx.work.runtime
	implementation libs.androidx.concurrent.futures

	// The core module that provides APIs to a shell
	implementation libs.libsuCore
	// Optional: APIs for creating root services. Depends on ":core"
	implementation libs.libsuService
	// Optional: Provides remote file system support
	implementation libs.libsuNIO

	implementation libs.remotepreferences
	// Remote Preferences for Xposed Module prefs
	implementation libs.colorpicker //Color Picker Component for UI
	implementation libs.persian.date.time //Persian Calendar

	implementation libs.markdown //Markdown reader

	// Search Preference
	implementation libs.androidx.cardview
	implementation libs.apache.commons.text

	implementation libs.androidx.swiperefreshlayout

	// Class initializer
	// https://mvnrepository.com/artifact/org.objenesis/objenesis
	implementation libs.objenesis

	implementation libs.ntpClient //NTP Client

	//Google Subject Segmentation - MLKit
	implementation libs.play.services.mlkit.subject.segmentation
	implementation libs.play.services.base
  
  // Collapsing Toolbar with subtitle
	implementation libs.collapsingtoolbarlayout.subtitle

	// Splash screen
	implementation libs.androidx.core.splashscreen
}